ifneq ($(VERBOSE),true)
  QUIET:=@
endif

ifndef CC
  CC:=gcc
endif

ifndef CXX
  CXX:=g++
endif

ifndef CXXSTANDARD
  CXXSTANDARD:=-std=c++14
endif

ifndef CSTANDARD
  CSTANDARD:=-std=c11
endif

ifndef SOURCE_PATH
  SOURCE_PATH=.
endif

ifndef BUILD_PATH
  BUILD_PATH=$(SOURCE_PATH)/bin
endif

INCPATH       = -I.
CFLAGS        = -pipe -g -Os -Wall -W -fPIC $(DEFINES) $(INCPATH)
CXXFLAGS      = $(CFLAGS) -fno-exceptions -fno-rtti
LDFLAGS       = 

TARGET        = buildtest
SOURCES       = tests/build.cpp \
		application.cpp \
		socket.cpp \
		childprocess.cpp \
		cxxutils/mutex.cpp \
		cxxutils/vfifo.cpp \
		cxxutils/configmanip.cpp \
		cxxutils/mountpoint_helpers.cpp \
		cxxutils/syslogstream.cpp \
		cxxutils/translate.cpp \
		specialized/eventbackend.cpp \
		specialized/peercred.cpp \
		specialized/procstat.cpp \
		specialized/proclist.cpp \
		specialized/fstable.cpp \
		specialized/MountEvent.cpp \
		specialized/FileEvent.cpp \
		specialized/PollEvent.cpp \
		specialized/ProcessEvent.cpp \
#		integration/sdl.cpp

OBJS := $(SOURCES:.s=.o)
OBJS := $(OBJS:.c=.o)
OBJS := $(OBJS:.cpp=.o)
OBJS := $(foreach f,$(OBJS),$(BUILD_PATH)/$(f))
SOURCES := $(foreach f,$(SOURCES),$(SOURCE_PATH)/$(f))

$(BUILD_PATH)/%.o: $(SOURCE_PATH)/%.cpp
	@echo [Compiling]: $<
	$(QUIET) $(CXX) -c -o $@ $< $(CXXSTANDARD) $(CXXFLAGS)

$(BUILD_PATH)/%.o: $(SOURCE_PATH)/%.c
	@echo [Compiling]: $<
	$(QUIET) $(CC) -c -o $@ $< $(CSTANDARD) $(CFLAGS)

$(TARGET): OUTPUT_DIR $(OBJS)
	@echo [Completed]: $@

OUTPUT_DIR:
	$(QUIET) mkdir -p $(BUILD_PATH)/tests
	$(QUIET) mkdir -p $(BUILD_PATH)/cxxutils
	$(QUIET) mkdir -p $(BUILD_PATH)/integration
	$(QUIET) mkdir -p $(BUILD_PATH)/specialized

clean:
	$(QUIET) rm -f $(TARGET)
	$(QUIET) rm -rf $(BUILD_PATH)
